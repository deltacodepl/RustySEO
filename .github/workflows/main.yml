name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Using LTS version for better compatibility

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev \
              libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev libssl-dev

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          npm install --global windows-build-tools

      - name: Install frontend dependencies
        run: |
          npm install
          npm install @tauri-apps/cli@latest @tauri-apps/api@latest --save-dev

      - name: Explicitly install platform-specific Tauri CLI
        run: |
          if [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            npm install @tauri-apps/cli-win32-x64-msvc --save-dev
          elif [[ "${{ matrix.platform }}" == "ubuntu-22.04" ]]; then
            npm install @tauri-apps/cli-linux-x64-gnu --save-dev
          fi

      - name: Build and release with Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
